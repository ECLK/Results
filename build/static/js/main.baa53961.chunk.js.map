{"version":3,"sources":["elections/public/img/Emplem of SriLanka.png","elections/constants/GEN_ELEC_YEAR_LIST.js","elections/constants/RESULT_TYPE.js","elections/constants/ED_TO_PD_LIST.js","elections/utils/cache.js","elections/utils/data.js","elections/constants/REGION_CODE_TO_NAME.js","elections/constants/PARTY_TO_H.js","elections/constants/PARTY_CODE_TO_INFO.js","elections/utils/party.js","elections/utils/color.js","elections/utils/render.js","elections/utils/region.js","elections/utils/polygon.js","elections/components/ChartMap.js","elections/components/ChartPie.js","elections/components/TableCandidateList.js","elections/components/TableRowDetailedResults.js","elections/components/TableRowHeaderDetailedResults.js","elections/components/TableDetailedResultsForED.js","elections/components/TableDetailedResults.js","elections/components/TableEDSummary.js","elections/components/ChartSeats.js","elections/components/TableFinalSeats.js","elections/components/TableLatestResults.js","elections/components/YearSelector.js","elections/components/HomePage.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","GEN_ELEC_YEAR_LIST","RESULT_TYPE","RP_V","RE_VI","RE_V","RE_S","RN_V","RN_SI","RN_VS","RN_VSN","RE_SC","RN_NC","RN_SCNC","ED_TO_PD_LIST","cacheGet","cacheKey","fallback","a","tStart","Date","now","dataJson","localStorage","getItem","JSON","parse","data","dataJsonHot","stringify","setItem","clear","tDelta","dataSize","length","console","debug","getJson","jsonFileName","fetch","response","json","getResults","year","dataFileName","getResultGroups","resultList","mapReduce","slice","x","type","getRegionList","edCode","pdList","Promise","all","map","pdCode","polygonFileName","childRegionCode","polygonList","getRegionListLK","edList","Object","keys","parsePctStr","pctStr","parseFloat","substring","dataList","funcMapKey","funcReduceList","dataMap","reduce","key","push","dataReduced","sort","sortField","b","localeCompare","downloadResults","fileDownload","formatPercent","n","d","Number","toLocaleString","undefined","style","minimumFractionDigits","REGION_CODE_TO_NAME","PARTY_TO_L","PARTY_TO_H","PARTY_CODE_TO_INFO","DEFAULT_BACK_COLOR","getPartyList","result","getWinningParty","getPartyName","partyCode","getPartyColor","isWin","p","h","s","l","hsla","renderEmptyCell","className","renderParty","imageFileName","split","replace","title","src","alt","renderPercent","numerator","percent","renderLoading","renderRegion","regionCode","regionCodeCleaned","regionName","regionType","href","target","rel","getEDCode","getBBox","regionList","region","minLat","maxLat","minLng","maxLng","polygon","lat","lng","Math","min","max","ChartMap","this","props","childRegionCodeType","width","height","latSpan","lngSpan","r","actualWidth","actualHeight","getT","t","childRegionToColor","pdToColor","color","renderedRegionList","i","renderedPolygonList","j","iRegion","iPolygon","c","y","concat","join","fill","stroke","strokeWidth","renderPolygon","xMid","yMid","x0","x1","fontWidth","charCount","fontSize","textAnchor","parentRegionCode","xmlns","Component","degToRad","deg","PI","ChartPie","pSum","byPartyForDisplay","filter","forParty","theta","renderedArcs","votePercentage","prevTheta","thetaRad","prevThetaRad","sin","y0","cos","y1","thetaMid","D_TEXT","x01","y01","largeArcFlag","abs","sweepFlag","label","labelP","sqrt","fontWeight","TableCandidateList","partyToCandidateList","candidateResultList","renderedByParty","candidateList","candidate","TableRowDetailedResults","partyList","regionCodeField","summary","winPartyCode","partyToResult","isDisplaySeats","id","partyResult","keyPrefix","voteCount","seatCount","backgroundColor","numeratorField","percentField","TableRowHeaderDetailedResults","showSummary","showSeats","firstRowHeader","rowSpan","colSpan","summaryField","TableDetailedResultsForED","_isMounted","state","edDRList","setState","resultSummary","edLatestRS","headerRow","rowList","footerRow","table","TableDetailedResults","detailedResultList","edRSL","edResultSummaryList","edToCRList","edToDRList","edToLatestRS","TableEDSummary","edVoteSummary","edSeatSummary","lkSeatSummaryIncrLast","partyToVoteCount","resultVote","party","isNaN","totalVotes","values","edVoteSummaryByEdCode","resultVoteByParty","ChartSeats","cumSeatCount","renderedBoxList","Array","from","renderedBox","cx","BOX_DIM","cy","x2","y2","strokeDasharray","TableFinalSeats","finalSeats","bySeatType","seatType","FORMAT_TIME_OPTIONS","month","day","TableLatestResults","displayResultList","reverse","pdName","edName","resultTime","winPartyPStr","renderedDescription","byParty","votesPercentage","description","renderDescription","formatT","ts","toLocaleTimeString","YearSelector","onClick","onChangeYear","bind","selectedYear","DEFAULT_YEAR","HomePage","resultGroups","updateYear","lkSeatSummaryIncr","finalSeatsGroup","onDownloadResults","marginTop","marginBottom","Logo","App","ReactGA","initialize","pageview","window","location","pathname","search","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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O,QACP,MAAO,WACP,MAAO,cACP,MAAO,WACP,MAAO,aACP,MAAO,UACP,MAAO,WACP,MAAO,uBACP,KAAM,UACN,MAAO,UACP,MAAO,UACP,MAAO,SACP,MAAO,eACP,MAAO,WACP,MAAO,cACP,MAAO,cACP,MAAO,UACP,MAAO,SACP,MAAO,SACP,MAAO,QACP,MAAO,WACP,MAAO,WACP,MAAO,uBACP,KAAM,WACN,MAAO,WACP,MAAO,cACP,MAAO,SACP,MAAO,gBACP,MAAO,YACP,MAAO,WACP,MAAO,WACP,MAAO,aACP,MAAO,wBACP,KAAM,QACN,MAAO,aACP,MAAO,eACP,MAAO,eACP,MAAO,aACP,MAAO,YACP,MAAO,YACP,MAAO,WACP,MAAO,cACP,MAAO,aACP,MAAO,aACP,MAAO,YACP,MAAO,UACP,MAAO,eACP,MAAO,qBACP,KAAM,SACN,MAAO,WACP,MAAO,UACP,MAAO,SACP,MAAO,UACP,MAAO,sBACP,KAAM,eACN,MAAO,yBACP,MAAO,WACP,MAAO,gBACP,MAAO,WACP,MAAO,4BACP,KAAM,QACN,MAAO,aACP,MAAO,cACP,MAAO,cACP,MAAO,mBACP,MAAO,WACP,MAAO,YACP,MAAO,UACP,MAAO,QACP,MAAO,YACP,MAAO,aACP,MAAO,qBACP,KAAM,SACN,MAAO,WACP,MAAO,UACP,MAAO,WACP,MAAO,gBACP,MAAO,aACP,MAAO,SACP,MAAO,WACP,MAAO,sBACP,KAAM,aACN,MAAO,cACP,MAAO,WACP,MAAO,WACP,MAAO,iBACP,MAAO,0BACP,GAAM,SACN,MAAO,QACP,MAAO,cACP,MAAO,iBACP,MAAO,UACP,MAAO,QACP,MAAO,WACP,MAAO,cACP,MAAO,iBACP,MAAO,SACP,MAAO,SACP,MAAO,cACP,MAAO,sBACP,GAAM,QACN,MAAO,SACP,MAAO,WACP,MAAO,aACP,MAAO,qBACP,OAAQ,wBACR,GAAM,aACN,MAAO,WACP,MAAO,aACP,MAAO,aACP,MAAO,0BACP,GAAM,cACN,MAAO,SACP,MAAO,cACP,MAAO,WACP,MAAO,WACP,MAAO,2BACP,GAAM,cACN,M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","file":"static/js/main.baa53961.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Emplem of SriLanka.25453117.png\";","const GEN_ELEC_YEAR_LIST = [\n  1989,\n  1994,\n  2000,\n  2001,\n  2004,\n  2010,\n  2015,\n  2020,\n];\n\nexport default GEN_ELEC_YEAR_LIST;\n","const RESULT_TYPE = {\n  RP_V: 'RP_V',\n  RE_VI: 'RE_VI',\n  RE_V: 'RE_V',\n\n  RE_S: 'RE_S',\n  RN_V: 'RN_V',\n\n  RN_SI: 'RN_SI',\n  RN_VS: 'RN_VS',\n  RN_VSN: 'RN_VSN',\n\n  RE_SC: 'RE_SC',\n  RN_NC: 'RN_NC',\n  RN_SCNC: 'RN_SCNC',\n}\n\nexport default RESULT_TYPE;\n","const ED_TO_PD_LIST = {\n  \"01\": [\n    \"01A\",\n    \"01B\",\n    \"01C\",\n    \"01D\",\n    \"01E\",\n    \"01F\",\n    \"01G\",\n    \"01H\",\n    \"01I\",\n    \"01J\",\n    \"01K\",\n    \"01L\",\n    \"01M\",\n    \"01N\",\n    \"01O\"\n  ],\n  \"02\": [\n    \"02A\",\n    \"02B\",\n    \"02C\",\n    \"02D\",\n    \"02E\",\n    \"02F\",\n    \"02G\",\n    \"02H\",\n    \"02I\",\n    \"02J\",\n    \"02K\",\n    \"02L\",\n    \"02M\"\n  ],\n  \"03\": [\n    \"03A\",\n    \"03B\",\n    \"03C\",\n    \"03D\",\n    \"03E\",\n    \"03F\",\n    \"03G\",\n    \"03H\"\n  ],\n  \"04\": [\n    \"04A\",\n    \"04B\",\n    \"04C\",\n    \"04D\",\n    \"04E\",\n    \"04F\",\n    \"04G\",\n    \"04H\",\n    \"04I\",\n    \"04J\",\n    \"04K\",\n    \"04L\",\n    \"04M\"\n  ],\n  \"05\": [\n    \"05A\",\n    \"05B\",\n    \"05C\",\n    \"05D\"\n  ],\n  \"06\": [\n    \"06A\",\n    \"06B\",\n    \"06C\",\n    \"06D\"\n  ],\n  \"07\": [\n    \"07A\",\n    \"07B\",\n    \"07C\",\n    \"07D\",\n    \"07E\",\n    \"07F\",\n    \"07G\",\n    \"07H\",\n    \"07I\",\n    \"07J\"\n  ],\n  \"08\": [\n    \"08A\",\n    \"08B\",\n    \"08C\",\n    \"08D\",\n    \"08E\",\n    \"08F\",\n    \"08G\"\n  ],\n  \"09\": [\n    \"09A\",\n    \"09B\",\n    \"09C\",\n    \"09D\"\n  ],\n  \"10\": [\n    \"10A\",\n    \"10B\",\n    \"10C\",\n    \"10D\",\n    \"10E\",\n    \"10F\",\n    \"10G\",\n    \"10H\",\n    \"10I\",\n    \"10J\",\n    \"10K\"\n  ],\n  \"11\": [\n    \"11A\",\n    \"11B\",\n    \"11C\"\n  ],\n  \"12\": [\n    \"12A\",\n    \"12B\",\n    \"12C\"\n  ],\n  \"13\": [\n    \"13A\",\n    \"13B\",\n    \"13C\",\n    \"13D\"\n  ],\n  \"14\": [\n    \"14A\",\n    \"14B\",\n    \"14C\"\n  ],\n  \"15\": [\n    \"15A\",\n    \"15B\",\n    \"15C\",\n    \"15D\",\n    \"15E\",\n    \"15F\",\n    \"15G\",\n    \"15H\",\n    \"15I\",\n    \"15J\",\n    \"15K\",\n    \"15L\",\n    \"15M\",\n    \"15N\"\n  ],\n  \"16\": [\n    \"16A\",\n    \"16B\",\n    \"16C\",\n    \"16D\",\n    \"16E\"\n  ],\n  \"17\": [\n    \"17A\",\n    \"17B\",\n    \"17C\",\n    \"17D\",\n    \"17E\",\n    \"17F\",\n    \"17G\"\n  ],\n  \"18\": [\n    \"18A\",\n    \"18B\",\n    \"18C\"\n  ],\n  \"19\": [\n    \"19A\",\n    \"19B\",\n    \"19C\",\n    \"19D\",\n    \"19E\",\n    \"19F\",\n    \"19G\",\n    \"19H\",\n    \"19I\"\n  ],\n  \"20\": [\n    \"20A\",\n    \"20B\",\n    \"20C\"\n  ],\n  \"21\": [\n    \"21A\",\n    \"21B\",\n    \"21C\",\n    \"21D\",\n    \"21E\",\n    \"21F\",\n    \"21G\",\n    \"21H\"\n  ],\n  \"22\": [\n    \"22A\",\n    \"22B\",\n    \"22C\",\n    \"22D\",\n    \"22E\",\n    \"22F\",\n    \"22G\",\n    \"22H\",\n    \"22I\"\n  ],\n}\n\nexport default ED_TO_PD_LIST;\n","export async function cacheGet(cacheKey, fallback) {\n  const tStart = Date.now()\n  const dataJson = localStorage.getItem(cacheKey);\n  if (dataJson) {\n    return JSON.parse(dataJson);\n  }\n\n  const data = await fallback();\n  if (data) {\n    const dataJsonHot = JSON.stringify(data);\n    try {\n      localStorage.setItem(cacheKey, dataJsonHot);\n    } catch {\n      localStorage.clear();\n      localStorage.setItem(cacheKey, dataJsonHot);\n    }\n\n    const tDelta = Date.now() - tStart;\n    const dataSize = dataJsonHot.length / 1000;\n    console.debug(`cacheGet*: ${cacheKey} ${dataSize}KB  in ${tDelta}s`);\n  }\n  return data;\n}\n","import fileDownload from 'js-file-download';\n\nimport ED_TO_PD_LIST from '../constants/ED_TO_PD_LIST.js';\nimport {cacheGet} from '../utils/cache.js';\n\nasync function getJson(jsonFileName, isCached=false) {\n  async function fallback() {\n    const response = await fetch(jsonFileName);\n    return await response.json();\n  }\n  if (isCached) {\n    const cacheKey = jsonFileName;\n    return await cacheGet(cacheKey, fallback);\n  } else {\n    return fallback();\n  }\n}\n\nexport async function getResults(year) {\n  const dataFileName = `data/elections/gen_elec_sl.ec.results.${year}.json`;\n  return await getJson(dataFileName, true)\n}\n\nexport async function getResultGroups(year) {\n  const resultList = await getResults(year)\n  return mapReduce(resultList.slice(0, 1000), x => x.type, x => x);\n}\n\nexport async function getRegionList(edCode) {\n  const pdList = ED_TO_PD_LIST[edCode];\n  return Promise.all(pdList.map(\n    async function(pdCode) {\n      const polygonFileName = `data/maps/EC-${pdCode}.json`;\n      return {\n          childRegionCode: pdCode,\n          polygonList: await getJson(polygonFileName, false),\n      }\n    },\n  ));\n}\n\nexport async function getRegionListLK() {\n  const edList = Object.keys(ED_TO_PD_LIST);\n  return Promise.all(edList.map(\n    async function(edCode) {\n      const polygonFileName = `data/maps/EC-${edCode}.json`;\n      return {\n          childRegionCode: edCode,\n          polygonList: await getJson(polygonFileName, true),\n      }\n    },\n  ));\n}\n\nexport function parsePctStr(pctStr) {\n  if (!pctStr) {\n    return 1.0;\n  }\n  return parseFloat(pctStr.substring(0, pctStr.length - 1)) / 100.0;\n}\n\nexport function mapReduce(dataList, funcMapKey, funcReduceList) {\n  const dataMap = dataList.reduce(\n    function(dataMap, data) {\n      const key = funcMapKey(data);\n      if (!dataMap[key]) {\n        dataMap[key] = [];\n      }\n      dataMap[key].push(data);\n      return dataMap;\n    },\n    {},\n  );\n\n  return Object.keys(dataMap).reduce(\n    function(dataReduced, key) {\n      dataReduced[key] = funcReduceList(dataMap[key]);\n      return dataReduced;\n    },\n    {},\n  );\n}\n\nexport function sort(dataList, sortField) {\n  return dataList.sort(\n    function(a, b) {\n      return a[sortField].localeCompare(b[sortField]);\n    },\n  );\n}\n\nexport async function downloadResults(year) {\n  const resultList = await getResults(year);\n  fileDownload(\n    JSON.stringify(resultList),\n    `gen_elec_sl.ec.results.${year}.json`,\n  );\n}\n\n\nexport function formatPercent(n, d) {\n  return Number(n / d).toLocaleString(\n      undefined,\n      {\n        style: 'percent',\n        minimumFractionDigits:2,\n      }\n  );\n}\n","const REGION_CODE_TO_NAME = {\n  \"01\": \"Colombo\",\n  \"01A\": \"Colombo North\",\n  \"01B\": \"Colombo Central\",\n  \"01C\": \"Borella\",\n  \"01D\": \"Colombo East\",\n  \"01E\": \"Colombo West\",\n  \"01F\": \"Dehiwala\",\n  \"01G\": \"Ratmalana\",\n  \"01H\": \"Kolonnawa\",\n  \"01I\": \"Kotte\",\n  \"01J\": \"Kaduwela\",\n  \"01K\": \"Avissawella\",\n  \"01L\": \"Homagama\",\n  \"01M\": \"Maharagama\",\n  \"01N\": \"Kesbewa\",\n  \"01O\": \"Moratuwa\",\n  \"01P\": \"Postal Votes Colombo\",\n  \"02\": \"Gampaha\",\n  \"02A\": \"Wattala\",\n  \"02B\": \"Negombo\",\n  \"02C\": \"Katana\",\n  \"02D\": \"Divulapitiya\",\n  \"02E\": \"Mirigama\",\n  \"02F\": \"Minuwangoda\",\n  \"02G\": \"Attanagalla\",\n  \"02H\": \"Gampaha\",\n  \"02I\": \"Ja Ela\",\n  \"02J\": \"Mahara\",\n  \"02K\": \"Dompe\",\n  \"02L\": \"Biyagama\",\n  \"02M\": \"Kelaniya\",\n  \"02P\": \"Postal Votes Gampaha\",\n  \"03\": \"Kalutara\",\n  \"03A\": \"Panadura\",\n  \"03B\": \"Bandaragama\",\n  \"03C\": \"Horana\",\n  \"03D\": \"Bulathsinhala\",\n  \"03E\": \"Mathugama\",\n  \"03F\": \"Kalutara\",\n  \"03G\": \"Beruwala\",\n  \"03H\": \"Agalawatta\",\n  \"03P\": \"Postal Votes Kalutara\",\n  \"04\": \"Kandy\",\n  \"04A\": \"Galagedara\",\n  \"04B\": \"Harispattuwa\",\n  \"04C\": \"Pathadumbara\",\n  \"04D\": \"Ududumbara\",\n  \"04E\": \"Teldeniya\",\n  \"04F\": \"Kundasale\",\n  \"04G\": \"Hewaheta\",\n  \"04H\": \"Senkadagala\",\n  \"04I\": \"Mahanuwara\",\n  \"04J\": \"Yatinuwara\",\n  \"04K\": \"Udunuwara\",\n  \"04L\": \"Gampola\",\n  \"04M\": \"Nawalapitiya\",\n  \"04P\": \"Postal Votes Kandy\",\n  \"05\": \"Matale\",\n  \"05A\": \"Dambulla\",\n  \"05B\": \"Laggala\",\n  \"05C\": \"Matale\",\n  \"05D\": \"Rattota\",\n  \"05P\": \"Postal Votes Matale\",\n  \"06\": \"Nuwara-Eliya\",\n  \"06A\": \"Nuwara Eliya Maskeliya\",\n  \"06B\": \"Kothmale\",\n  \"06C\": \"Hanguranketha\",\n  \"06D\": \"Walapane\",\n  \"06P\": \"Postal Votes Nuwara-Eliya\",\n  \"07\": \"Galle\",\n  \"07A\": \"Balapitiya\",\n  \"07B\": \"Ambalangoda\",\n  \"07C\": \"Karandeniya\",\n  \"07D\": \"Bentara Elpitiya\",\n  \"07E\": \"Hiniduma\",\n  \"07F\": \"Baddegama\",\n  \"07G\": \"Ratgama\",\n  \"07H\": \"Galle\",\n  \"07I\": \"Akmeemana\",\n  \"07J\": \"Habaraduwa\",\n  \"07P\": \"Postal Votes Galle\",\n  \"08\": \"Matara\",\n  \"08A\": \"Deniyaya\",\n  \"08B\": \"Hakmana\",\n  \"08C\": \"Akuressa\",\n  \"08D\": \"Kamburupitiya\",\n  \"08E\": \"Devinuwara\",\n  \"08F\": \"Matara\",\n  \"08G\": \"Weligama\",\n  \"08P\": \"Postal Votes Matara\",\n  \"09\": \"Hambantota\",\n  \"09A\": \"Mulkirigala\",\n  \"09B\": \"Beliatta\",\n  \"09C\": \"Tangalle\",\n  \"09D\": \"Thissamaharama\",\n  \"09P\": \"Postal Votes Hambantota\",\n  \"10\": \"Jaffna\",\n  \"10A\": \"Kayts\",\n  \"10B\": \"Vaddukoddai\",\n  \"10C\": \"Kankesanthurai\",\n  \"10D\": \"Manipay\",\n  \"10E\": \"Kopay\",\n  \"10F\": \"Udupiddy\",\n  \"10G\": \"Point Pedro\",\n  \"10H\": \"Chavakachcheri\",\n  \"10I\": \"Nallur\",\n  \"10J\": \"Jaffna\",\n  \"10K\": \"Kilinochchi\",\n  \"10P\": \"Postal Votes Jaffna\",\n  \"11\": \"Vanni\",\n  \"11A\": \"Mannar\",\n  \"11B\": \"Vavuniya\",\n  \"11C\": \"Mullaitivu\",\n  \"11P\": \"Postal Votes Vanni\",\n  \"11_D\": \"Displaced Votes Vanni\",\n  \"12\": \"Batticaloa\",\n  \"12A\": \"Kalkudah\",\n  \"12B\": \"Batticaloa\",\n  \"12C\": \"Paddiruppu\",\n  \"12P\": \"Postal Votes Batticaloa\",\n  \"13\": \"Digamadulla\",\n  \"13A\": \"Ampara\",\n  \"13B\": \"Samanthurai\",\n  \"13C\": \"Kalmunai\",\n  \"13D\": \"Pothuvil\",\n  \"13P\": \"Postal Votes Digamadulla\",\n  \"14\": \"Trincomalee\",\n  \"14A\": \"Seruvila\",\n  \"14B\": \"Trincomalee\",\n  \"14C\": \"Muttur\",\n  \"14P\": \"Postal Votes Trincomalee\",\n  \"15\": \"Kurunegala\",\n  \"15A\": \"Galgamuwa\",\n  \"15B\": \"Nikaweratiya\",\n  \"15C\": \"Yapahuwa\",\n  \"15D\": \"Hiriyala\",\n  \"15E\": \"Wariyapola\",\n  \"15F\": \"Panduwasnuwara\",\n  \"15G\": \"Bingiriya\",\n  \"15H\": \"Katugampola\",\n  \"15I\": \"Kuliyapitiya\",\n  \"15J\": \"Dambadeniya\",\n  \"15K\": \"Polgahawela\",\n  \"15L\": \"Kurunegala\",\n  \"15M\": \"Mawathagama\",\n  \"15N\": \"Dodangaslanda\",\n  \"15P\": \"Postal Votes Kurunegala\",\n  \"16\": \"Puttalam\",\n  \"16A\": \"Puttalam\",\n  \"16B\": \"Anamaduwa\",\n  \"16C\": \"Chilaw\",\n  \"16D\": \"Nattandiya\",\n  \"16E\": \"Wennappuwa\",\n  \"16P\": \"Postal Votes Puttalam\",\n  \"17\": \"Anuradhapura\",\n  \"17A\": \"Medawachchiya\",\n  \"17B\": \"Horowpothana\",\n  \"17C\": \"Anuradhapura East\",\n  \"17D\": \"Anuradhapura West\",\n  \"17E\": \"Kalawewa\",\n  \"17F\": \"Mihinthale\",\n  \"17G\": \"Kekirawa\",\n  \"17P\": \"Postal Votes Anuradhapura\",\n  \"18\": \"Polonnaruwa\",\n  \"18A\": \"Minneriya\",\n  \"18B\": \"Medirigiriya\",\n  \"18C\": \"Polonnaruwa\",\n  \"18P\": \"Postal Votes Polonnaruwa\",\n  \"19\": \"Badulla\",\n  \"19A\": \"Mahiyanganaya\",\n  \"19B\": \"Viyaluwa\",\n  \"19C\": \"Passara\",\n  \"19D\": \"Badulla\",\n  \"19E\": \"Hali Ela\",\n  \"19F\": \"Uva Paranagama\",\n  \"19G\": \"Welimada\",\n  \"19H\": \"Bandarawela\",\n  \"19I\": \"Haputale\",\n  \"19P\": \"Postal Votes Badulla\",\n  \"20\": \"Moneragala\",\n  \"20A\": \"Bibile\",\n  \"20B\": \"Monaragala\",\n  \"20C\": \"Wellawaya\",\n  \"20P\": \"Postal Votes Moneragala\",\n  \"21\": \"Ratnapura\",\n  \"21A\": \"Eheliyagoda\",\n  \"21B\": \"Ratnapura\",\n  \"21C\": \"Pelmadulla\",\n  \"21D\": \"Balangoda\",\n  \"21E\": \"Rakwana\",\n  \"21F\": \"Nivithigala\",\n  \"21G\": \"Kalawana\",\n  \"21H\": \"Kolonna\",\n  \"21P\": \"Postal Votes Ratnapura\",\n  \"22\": \"Kegalle\",\n  \"22A\": \"Dedigama\",\n  \"22B\": \"Galigamuwa\",\n  \"22C\": \"Kegalle\",\n  \"22D\": \"Rambukkana\",\n  \"22E\": \"Mawanella\",\n  \"22F\": \"Aranayaka\",\n  \"22G\": \"Yatiyanthota\",\n  \"22H\": \"Ruwanwella\",\n  \"22I\": \"Deraniyagala\",\n  \"22P\": \"Postal Votes Kegalle\",\n  \"PV\": \"Postal Votes\",\n  \"DV\": \"Displaced Votes\",\n  \"QV\": \"Quarantined Votes\",\n}\nexport default REGION_CODE_TO_NAME;\n","const PARTY_TO_H = {\n  'UNP': 120, 'SJB': 120,\n  'SLFP': 240, 'PA': 240, 'UPFA': 240,\n  'SLPP': 0,\n  'TNA': 60, 'TULF': 60, 'ITAK': 60, 'ACTC': 60,\n  'SU': 45, 'JHU': 45,\n\n  'JVP': 0, 'DNA': 0, 'NSSP': 0, 'MEP': 0, 'LSSP': 0, 'SLPF': 0, 'JJB': 0,\n  'EPDP': 15, 'TELO': 15, 'EPRLF': 15,\n  'SLMC': 150, 'NUA': 150, 'ACMC': 150,\n  'CWC': 15,\n  'SLMP': 300, 'USA': 300,\n\n  'TMTK': 15,\n  'TMVP': 15,\n  'AITC': 15,\n  'AITM': 15,\n  'SDPT': 15,\n  'NC': 150,\n  'MNA': 150,\n  'UPA': 150,\n}\n\nexport const PARTY_TO_L = {\n  'SLPP': 35,\n  'SJB': 35,\n  'ITAK': 35,\n}\n\nexport default PARTY_TO_H;\n","const PARTY_CODE_TO_INFO = {\r\n  'ACMC': {'party_name': 'All Ceylon Makkal Congress','party_code': 'ACMC','party_symbol': 'Peacock','party_color': ''},\r\n  'AITC': {'party_name': 'Ahila Ilankai Thamil Congress','party_code': 'AITC','party_symbol': 'Bicycle','party_color': ''},\r\n  'AITM': {'party_name': 'Akhila Ilankai Tamil Mahasabha','party_code': 'AITM','party_symbol': 'Ship','party_color': ''},\r\n  'DLF': {'party_name': 'Democratic Left Front','party_code': 'DLF','party_symbol': 'Clock','party_color': ''},\r\n  'DUA': {'party_name': 'Democratic Unity Alliance','party_code': 'DUA','party_symbol': 'Two Leaves','party_color': ''},\r\n  'DUNF': {'party_name': 'Democratic United National Front','party_code': 'DUNF','party_symbol': 'Eagle','party_color': ''},\r\n  'EDF': {'party_name': 'Eelavar Democratic Front','party_code': 'EDF','party_symbol': 'Plough','party_color': ''},\r\n  'EPDP': {'party_name': 'Eelam People’s Democratic Party','party_code': 'EPDP','party_symbol': 'Veena','party_color': ''},\r\n  'FSP': {'party_name': 'Frontline Socialist Party','party_code': 'FSP','party_symbol': 'Sledge Hammer','party_color': ''},\r\n  'ITAK': {'party_name': 'Ilankai Tamil Arasu Kadchi','party_code': 'ITAK','party_symbol': 'House','party_color': ''},\r\n  'JJB': {'party_name': 'Jathika Jana Balawegaya','party_code': 'JJB','party_symbol': 'Compass','party_color': ''},\r\n  'JSP': {'party_name': 'Jana Setha Peramuna','party_code': 'JSP','party_symbol': 'Tractor','party_color': ''},\r\n  'LP': {'party_name': 'The Liberal Party','party_code': 'LP','party_symbol': 'Book','party_color': ''},\r\n  'LSSP': {'party_name': 'Lanka Sama Samaja Party','party_code': 'LSSP','party_symbol': 'Key','party_color': ''},\r\n  'MJP': {'party_name': 'Maubima Janatha Pakshaya','party_code': 'MJP','party_symbol': 'Aeroplane','party_color': ''},\r\n  'MNA': {'party_name': 'Muslim National Alliance','party_code': 'MNA','party_symbol': 'Pair of Scales','party_color': ''},\r\n  'NC': {'party_name': 'National Congress','party_code': 'NC','party_symbol': 'Horse','party_color': ''},\r\n  'NDF': {'party_name': 'National Democratic Front','party_code': 'NDF','party_symbol': 'Motor Car','party_color': ''},\r\n  'NPP': {'party_name': 'National Peoples Party','party_code': 'NPP','party_symbol': 'Electric Bulb','party_color': ''},\r\n  'NSU': {'party_name': 'Nawa Sihala Urumaya','party_code': 'NSU','party_symbol': 'Bow and Arrow','party_color': ''},\r\n  'OPPP': {'party_name': 'Our Power of People Party','party_code': 'OPPP','party_symbol': 'Flag','party_color': ''},\r\n  'OWORS': {'party_name': 'Okkoma Wasiyo Okkoma Rajawaru Sanvidanaya','party_code': 'OWORS','party_symbol': 'Till','party_color': ''},\r\n  'SDPT': {'party_name': 'Social Democratic Party of Tamils','party_code': 'SDPT','party_symbol': 'Candle','party_color': ''},\r\n  'SEP': {'party_name': 'Socialist Equality Party','party_code': 'SEP','party_symbol': 'Pair of Scissors','party_color': ''},\r\n  'SJB': {'party_name': 'Samagi Jana Balawegaya','party_code': 'SJB','party_symbol': 'Telephone','party_color': ''},\r\n  'SJP': {'party_name': 'Sinhaladeepa Jathika Peramuna','party_code': 'SJP','party_symbol': 'Sword','party_color': ''},\r\n  'SLFP': {'party_name': 'Sri Lanka Freedom Party','party_code': 'SLFP','party_symbol': 'Hand','party_color': ''},\r\n  'SLLP': {'party_name': 'Sri Lanka Labour Party','party_code': 'SLLP','party_symbol': 'Kangaroo','party_color': ''},\r\n  'SLMC': {'party_name': 'Sri Lanka Muslim Congress','party_code': 'SLMC','party_symbol': 'Tree','party_color': ''},\r\n  'SLP': {'party_name': 'Sri Lanka Labour Party','party_code': 'SLP','party_symbol': 'Kangaroo','party_color': ''},\r\n  'SLPP': {'party_name': 'Sri Lanka Podujana Peramuna','party_code': 'SLPP','party_symbol': 'Flower Bud','party_color': ''},\r\n  'SPSL': {'party_name': 'Socialist Party of Sri Lanka','party_code': 'SPSL','party_symbol': 'Balloon','party_color': ''},\r\n  'TLP': {'party_name': 'The Liberal Party','party_code': 'TLP','party_symbol': 'Book','party_color': ''},\r\n  'TMTK': {'party_name': 'Thamil Makkal Thesiya Kuttani','party_code': 'TMTK','party_symbol': 'Fish','party_color': ''},\r\n  'TMVP': {'party_name': 'Thamil Makkal Viduthalai Pulikal','party_code': 'TMVP','party_symbol': 'Boat','party_color': ''},\r\n  'TULF': {'party_name': 'Tamil United Liberation Front','party_code': 'TULF','party_symbol': 'Sun','party_color': ''},\r\n  'ULF': {'party_name': 'United Left Front','party_code': 'ULF','party_symbol': 'Canoe','party_color': ''},\r\n  'UNP': {'party_name': 'United National Party','party_code': 'UNP','party_symbol': 'Elephant','party_color': 'Green'},\r\n  'UPA': {'party_name': 'United Peace Alliance','party_code': 'UPA','party_symbol': 'Butterfly','party_color': ''},\r\n  'USP': {'party_name': 'United Socialist Party','party_code': 'USP','party_symbol': 'Tri-shaw','party_color': ''},\r\n\r\n  // Other Elections\r\n  'UPFA': {'party_name': 'United Peoples\\'s Freedom Alliance','party_code': 'UPFA','party_symbol': 'Betel Leaf','party_color': 'Blue'},\r\n  'JVP': {'party_name': 'Janatha Vimukti Peramuna','party_code': 'JVP','party_symbol': 'Bell','party_color': 'Red'},\r\n  'NSSP': {'party_name': 'Nawa Sama Samaja Party','party_code': 'NSSP','party_symbol': 'Bell','party_color': 'Red'},\r\n\r\n}\r\n\r\nexport default PARTY_CODE_TO_INFO;\r\n","\nimport PARTY_TO_H, {PARTY_TO_L} from '../constants/PARTY_TO_H.js';\nimport PARTY_CODE_TO_INFO from '../constants/PARTY_CODE_TO_INFO.js';\n\nimport {hsla} from '../utils/color.js';\nimport {parsePctStr} from '../utils/data.js';\n\nconst DEFAULT_BACK_COLOR = 'white';\n\nexport function getPartyList(result) {\n  return result['by_party'].sort(\n    function(a, b) {\n      return b['vote_count'] - a['vote_count'];\n    },\n  ).sort(\n    function(a, b) {\n      return b['seat_count'] - a['seat_count'];\n    },\n  ).map(\n    function(x) {\n      return x['party_code'];\n    },\n  );\n}\n\nexport function getWinningParty(result) {\n  return result['by_party'][0]['party_code'];\n}\n\nexport function getPartyName(partyCode) {\n  return (PARTY_CODE_TO_INFO[partyCode])\n    ? PARTY_CODE_TO_INFO[partyCode]['party_name']\n    : '';\n}\n\nexport function getPartyColor(partyCode, isWin, pctStr) {\n  let p = parsePctStr(pctStr);\n\n  if (!isWin) {\n    return DEFAULT_BACK_COLOR;\n  }\n\n  let h = 0, s = 0;\n  if (PARTY_TO_H[partyCode] !== undefined) {\n    h = PARTY_TO_H[partyCode];\n    s = 100;\n  }\n  let l = 50.0;\n  if (PARTY_TO_L[partyCode] !== undefined) {\n    l = PARTY_TO_L[partyCode];\n  }\n\n  let a;\n  if (p < 0.5) {\n    a = 0.2;\n  } else if (p > 0.67) {\n    a = 0.6;\n  } else {\n    a = 0.4;\n  }\n  return hsla(h, s, l, a);\n}\n","export function hsla(h, s, l, a) {\n  return `hsla(${h},${s}%,${l}%,${a})`;\n}\n","import React from 'react'\n\nimport REGION_CODE_TO_NAME from '../constants/REGION_CODE_TO_NAME.js';\n\nimport {getPartyName} from '../utils/party.js';\n\nexport function renderEmptyCell() {\n  return (\n    <span className=\"span-empty-cell\">\n      -\n    </span>\n  )\n}\n\nexport function renderParty(partyCode) {\n  const imageFileName = `party_logos/logo_${partyCode}.png`;\n  partyCode = partyCode.split('_')[0].replace('IND', 'IG');\n  return (\n    <div className=\"div-party\" title={getPartyName(partyCode)}>\n      <div>{partyCode}</div>\n      <img className=\"img-party-logo\" src={imageFileName} alt=\"\" />\n    </div>\n  );\n}\n\nexport function renderPercent(numerator, percent) {\n  if (!percent) {\n    return numerator.toLocaleString();\n  }\n  let className = 'div-percent';\n\n  const p = parseFloat(percent.substring(0, percent.length - 1)) / 100.0;\n  if (p < 0.01) {\n    className += ' div-percent-zero';\n  } else if (p < 0.05) {\n    className += ' div-percent-seat-limit';\n  }\n\n  return (\n    <div className={className + ' td-number'}>\n      <div className=\"div-percent-numerator\">\n        {numerator.toLocaleString()}\n      </div>\n      <div className=\"div-percent-percent\">\n        {percent}\n      </div>\n    </div>\n  )\n}\n\nexport function renderLoading() {\n  return <p>...</p>;\n}\n\nexport function renderRegion(regionCode) {\n  let regionCodeCleaned = regionCode;\n  regionCodeCleaned = regionCodeCleaned.replace('DV', '_D');\n  regionCodeCleaned = regionCodeCleaned.replace('PV', 'P');\n  const regionName = REGION_CODE_TO_NAME[regionCodeCleaned];\n  const regionType = (regionCode.length > 2)\n    ? 'Polling Division'\n    : 'Electoral District';\n\n  let href = `#${regionCode}-details`;\n  let target = '';\n  if (regionType === 'Polling Division') {\n    href = 'https://en.wikipedia.org/wiki/'\n      + regionName + '_'\n      + regionType.replace(' ', '_')\n    target = \"_blank\"\n  }\n  return (\n    <a\n      href={href}\n      rel=\"noopener noreferrer\"\n      target={target}\n    >\n      <div className=\"div-subtext\">{regionType + ' ' + regionCode}</div>\n      <div>{regionName}</div>\n    </a>\n  );\n}\n\nexport function renderDescription(result) {\n  return (<div className=\"div-latest-results-item-description\">\n    {result['by_party'].map(\n      function(byParty, i) {\n        const partyCode = byParty['party_code'];\n        const votesPercentage = byParty['vote_percentage'];\n        const p = parseFloat(votesPercentage.substring(0, votesPercentage.length - 1)) / 100.0;\n\n        let description = '';\n        if (p >= 0.05) {\n          description = `${partyCode} ${votesPercentage}. `;\n        }\n\n        const style = (i !== 0) ? {color: '#808080'} : {};\n        return (\n          <span key={i} style={style}>\n            {description}\n          </span>\n        );\n\n      },\n      '',\n    )\n  }</div>);\n}\n","export function getEDCode(resultList) {\n  return resultList[0]['ed_code'];\n}\n","export function getBBox(regionList) {\n  const [MIN_LAT, MAX_LAT] = [-90, 90];\n  const [MIN_LNG, MAX_LNG] = [-180, 180];\n\n  const [minLat, maxLat, minLng, maxLng] = regionList.reduce(\n    function([minLat, maxLat, minLng, maxLng], region) {\n      const polygonList = region.polygonList;\n      return polygonList.reduce(\n        function([minLat, maxLat, minLng, maxLng], polygon) {\n          return polygon.reduce(\n            function([minLat, maxLat, minLng, maxLng], [lat, lng]) {\n              minLat = Math.min(minLat, lat);\n              maxLat = Math.max(maxLat, lat);\n              minLng = Math.min(minLng, lng);\n              maxLng = Math.max(maxLng, lng);\n              return [minLat, maxLat, minLng, maxLng];\n            },\n            [minLat, maxLat, minLng, maxLng],\n          );\n        },\n        [minLat, maxLat, minLng, maxLng],\n      );\n    },\n    [MAX_LAT, MIN_LAT, MAX_LNG, MIN_LNG],\n  );\n  return [minLat, maxLat, minLng, maxLng];\n}\n\nexport function getMid(polygonList) {\n  const [minLat, maxLat, minLng, maxLng] = getBBox([{\n      polygonList: polygonList,\n  }])\n  return [(minLat + maxLat) / 2, (minLng + maxLng) / 2];\n}\n\nexport function getT(regionList, width, height) {\n\n  const [minLat, maxLat, minLng, maxLng] = getBBox(regionList)\n\n  const latSpan = maxLat - minLat;\n  const lngSpan = maxLng - minLng;\n\n  const r = (latSpan / lngSpan) / (height / width);\n  let [actualWidth, actualHeight] = [width, height];\n  if (r > 1) {\n    actualWidth /= r;\n  } else {\n    actualHeight *= r;\n  }\n\n  function t([lat, lng]) {\n    const px = (lng - minLng) / lngSpan;\n    const py = (lat - minLat) / latSpan;\n    const x = actualWidth * px;\n    const y = actualHeight * (1 - py);\n    return [x, y];\n  }\n  return [t, actualWidth, actualHeight];\n}\n","import React, {Component} from 'react';\n\nimport REGION_CODE_TO_NAME from '../constants/REGION_CODE_TO_NAME.js';\nimport {getPartyColor, getWinningParty} from '../utils/party.js';\nimport {getBBox, getT} from '../utils/polygon.js';\n\nfunction renderPolygon(iRegion, iPolygon, t, polygon, color) {\n  const d = polygon.map(\n    function([lat, lng], i) {\n      const c = (i === 0) ? 'M' : 'L';\n      const [x, y] = t([lat, lng]);\n      return `${c}${x} ${y}`;\n    }\n  ).concat(['Z']).join(' ');\n\n  return (\n    <path\n      key={`polygon-${iRegion}-${iPolygon}`}\n      d={d}\n      fill={color}\n      stroke=\"gray\"\n      strokeWidth={1}\n    />\n  );\n}\n\nexport default class ChartMap extends Component {\n  render() {\n    const regionList = this.props.regionList;\n    const resultList = this.props.resultList;\n    const childRegionCodeType = this.props.childRegionCodeType;\n\n    const [WIDTH, HEIGHT] = [400, 400];\n    const [t, actualWidth, actualHeight] = getT(regionList, WIDTH, HEIGHT);\n\n    const childRegionToColor = resultList.reduce(\n      function(pdToColor, result) {\n        const childRegionCode = result[childRegionCodeType];\n        const winPartyCode = getWinningParty(result);\n        const winPartyPStr = result['by_party'][0]['vote_percentage'];\n        const color = getPartyColor(winPartyCode, true, winPartyPStr);\n        pdToColor[childRegionCode] = color;\n        return pdToColor;\n      },\n      {},\n    )\n\n    const renderedRegionList = regionList.map(\n      function(region, i) {\n        const childRegionCode = region.childRegionCode;\n        let color = childRegionToColor[childRegionCode];\n        if (!color) {\n          color = 'white';\n        }\n        const polygonList = region.polygonList;\n        const renderedPolygonList = polygonList.map(\n          function(polygon, j) {\n            return renderPolygon(i, j, t, polygon, color);\n          },\n        );\n\n        const [minLat, maxLat, minLng, maxLng] = getBBox([{\n          polygonList: polygonList,\n        }]);\n        const [xMid, yMid] = t([\n            (minLat + maxLat) / 2,\n            (minLng + maxLng) / 2,\n        ]);\n        // eslint-disable-next-line\n        const [x0, y0] = t([\n            minLat,\n            minLng,\n        ]);\n        // eslint-disable-next-line\n        const [x1, y1] = t([\n            maxLat,\n            maxLng,\n        ]);\n        const regionName = REGION_CODE_TO_NAME[childRegionCode];\n        const fontWidth = x1 - x0;\n        const charCount = regionName.length;\n        const fontSize = Math.min(12, 0.8 * fontWidth / charCount);\n\n        const href = '#' + childRegionCode;\n        return (\n          <svg\n            key={`polygonList-${i}`}\n            className=\"svg-polygon-list\"\n          >\n            <title>{`${regionName} (${childRegionCode})`}</title>\n            <a href={href}>\n              {renderedPolygonList}\n            </a>\n            <text\n              x={xMid}\n              y={yMid - fontSize / 2}\n              fill={'black'}\n              textAnchor={'middle'}\n              fontSize={fontSize * 1.5}\n            >\n              {childRegionCode}\n            </text>\n            <text\n              x={xMid}\n              y={yMid + fontSize / 2}\n              fill={'black'}\n              textAnchor={'middle'}\n              fontSize={fontSize}\n            >\n              {regionName}\n            </text>\n          </svg>\n        );\n      }\n    );\n\n    const SVG_XMLNS = 'http://www.w3.org/2000/svg';\n    return (\n      <svg\n        key={'Map-' + this.props.parentRegionCode}\n        xmlns={SVG_XMLNS}\n        width={actualWidth}\n        height={actualHeight}\n      >\n        {renderedRegionList}\n      </svg>\n    );\n\n  }\n}\n","import React, {Component} from 'react';\n\nimport {getPartyColor} from '../utils/party.js';\nimport {parsePctStr, formatPercent} from '../utils/data.js';\n\nfunction degToRad(deg) {\n  return deg * Math.PI / 180.0;\n}\n\nexport default class ChartPie extends Component {\n  render() {\n    const result = this.props.result;\n    let pSum = 0;\n    let byPartyForDisplay = result['by_party'].filter(\n      function(forParty) {\n        const votePercentage = forParty['vote_percentage'];\n        const p = parsePctStr(votePercentage);\n        if (p >= 0.05) {\n          pSum += p;\n          return true;\n        }\n        return false;\n      }\n    ).sort(\n      function(a, b) {\n        return b['vote_count'] - a['vote_count'];\n      },\n    ).concat([{\n      'party_code': 'Other',\n      'vote_percentage': formatPercent(1 - pSum, 1),\n    }]);\n\n    const r = 165;\n    const cx = r;\n    const cy = r;\n\n    let theta = 0;\n    const renderedArcs = byPartyForDisplay.map(\n      function(forParty, i) {\n        const partyCode = forParty['party_code'];\n        const votePercentage = forParty['vote_percentage'];\n        const p = parsePctStr(votePercentage);\n        const prevTheta = theta;\n        const deltaTheta = p * 360;\n        theta += deltaTheta;\n\n        const thetaRad = degToRad(theta);\n        const prevThetaRad = degToRad(prevTheta);\n\n        const x0 = cx + r * Math.sin(prevThetaRad);\n        const y0 = cy - r * Math.cos(prevThetaRad);\n\n        const x1 = cx + r * Math.sin(thetaRad);\n        const y1 = cy - r * Math.cos(thetaRad);\n\n        const thetaMid = (prevThetaRad + thetaRad) / 2;\n\n        let D_TEXT = 0.5;\n        if (p < 0.1) {\n          D_TEXT = 0.75;\n        }\n        const x01 = cx + r * Math.sin(thetaMid) * D_TEXT;\n        const y01 = cy - r * Math.cos(thetaMid) * D_TEXT;\n\n        const xAxisRotation = 0;\n        const largeArcFlag = (Math.abs(thetaRad - prevThetaRad) > Math.PI)\n          ? 1\n          : 0;\n        const sweepFlag = (thetaRad > 0) ? 1: 0;\n\n        const d = [\n            `M ${cx}, ${cy}`,\n            `L ${x0}, ${y0}`,\n            `A ${r}, ${r}`,\n            `${xAxisRotation}, ${largeArcFlag}, ${sweepFlag}, ${x1}, ${y1}`,\n            `Z`,\n        ].join(' ')\n\n        const color = getPartyColor(partyCode, true, '50.00%');\n        let label = '';\n        let labelP = '';\n        if (p >= 0.05) {\n          label = partyCode;\n          labelP = votePercentage;\n        }\n\n        const fontSize = Math.sqrt(p) * 48;\n\n        return (\n          <svg key={partyCode}>\n            <path d={d} fill={color} stroke={'gray'} strokeWidth={0.5} />\n            <text\n              x={x01}\n              y={y01 - fontSize / 2}\n              fontSize={fontSize * 0.6}\n              textAnchor={'middle'}\n            >\n              {label}\n            </text>\n            <text\n              x={x01}\n              y={y01 + fontSize / 2}\n              fontSize={fontSize}\n              fontWeight={'bold'}\n              textAnchor={'middle'}\n            >\n              {labelP}\n            </text>\n          </svg>\n        );\n      },\n    )\n\n    return (\n      <svg height={r * 2} width={r * 2}>\n        {renderedArcs}\n      </svg>\n    )\n  }\n}\n","import React, {Component} from 'react';\n\nimport {mapReduce} from '../utils/data.js';\n\nimport {renderParty} from '../utils/render.js';\n\nexport default class TableCandidateList extends Component {\n  render() {\n    const edCode = this.props.edCode;\n    const candidateResult = this.props.candidateResultList[0];\n    const partyToCandidateList = mapReduce(\n        candidateResult['by_candidate'],\n        x => x['party_code'],\n        x => x.map(x => x['candidate_name']),\n    )\n    const renderedByParty = Object.keys(partyToCandidateList).map(\n      function(partyCode, i) {\n        const candidateList = partyToCandidateList[partyCode];\n        return (\n          <div key={partyCode}>\n            <h4>{renderParty(partyCode)}</h4>\n            <ol>{\n              candidateList.map(\n                function(candidate, j) {\n                  return <li key={j}>{candidate}</li>;\n                }\n              )\n            }</ol>\n          </div>\n        )\n      },\n    );\n\n    return (\n      <div key={edCode}>\n        <h4>Elected Candidates</h4>\n        {renderedByParty}\n      </div>\n    )\n  }\n}\n","import React, {Component} from 'react';\n\nimport RESULT_TYPE from '../constants/RESULT_TYPE.js';\n\nimport {mapReduce} from '../utils/data.js';\nimport {getPartyColor, getWinningParty} from '../utils/party.js';\nimport {renderEmptyCell, renderPercent, renderRegion} from '../utils/render.js';\n\nexport default class TableRowDetailedResults extends Component {\n  render() {\n    const result = this.props.result;\n    const partyList = this.props.partyList;\n    const regionCodeField = this.props.regionCodeField;\n\n    const summary = result['summary'];\n    const regionCode = result[regionCodeField];\n    const winPartyCode = getWinningParty(result);\n    const partyToResult = mapReduce(\n      result['by_party'],\n      x => x['party_code'],\n      x => x[0],\n    );\n    const isDisplaySeats = (result['type'] === RESULT_TYPE.RE_S)\n      || (result['type'] === RESULT_TYPE.RN_SI);\n\n    return (\n      <tr\n        id={regionCode}\n        key={'DetailedResults-' + regionCode}\n        className={regionCode ? '' : 'tr-total'}\n      >\n        <td key={'region-name'} className=\"td-region\">\n          {isDisplaySeats ? regionCode ? (renderRegion(regionCode)) : 'Islandwide' : regionCode ? (renderRegion(regionCode)) : 'Districtwide' }\n        </td>\n        {partyList.map(\n          function(partyCode, j) {\n            const partyResult = partyToResult[partyCode];\n            const keyPrefix = partyCode + '-' + j;\n            if (!partyResult) {\n              return [\n                (\n                  <td key={keyPrefix + '-votes'} className='td-number'>\n                    {renderEmptyCell()}\n                  </td>\n                ),\n                (isDisplaySeats) ? (\n                  <td key={keyPrefix + '-seats'} className='td-seats'>\n                    {renderEmptyCell()}\n                  </td>\n                ) : null,\n              ];\n            }\n            const voteCount = partyResult['vote_count'];\n            const votePercentage = partyResult['vote_percentage'];\n            const seatCount = partyResult['seat_count'];\n            const isWin = (winPartyCode === partyCode);\n            const style = {\n              backgroundColor: getPartyColor(partyCode, isWin, votePercentage),\n            }\n\n            return [\n              (\n                <td key={keyPrefix + '-votes'} style={style}>\n                  {renderPercent(voteCount, votePercentage)}\n                </td>\n              ),\n              (isDisplaySeats) ? (\n                <td\n                  key={keyPrefix + '-seats'}\n                  className='td-seats'\n                  style={style}\n                >\n                  {seatCount}\n                </td>\n              ) : null,\n            ];\n          },\n        )}\n        {summary ? [\n          ['electors', null],\n          ['polled', 'percent_polled'],\n          ['valid', 'percent_valid'],\n          ['rejected', 'percent_rejected'],\n        ].map(\n          function([numeratorField, percentField], j) {\n            return (\n              <td key={numeratorField} className=\"td-number\">\n                {renderPercent(summary[numeratorField], summary[percentField])}\n              </td>\n            );\n          },\n        ) : null}\n      </tr>\n    );\n  }\n}\n","import React, {Component} from 'react';\n\nimport {renderParty} from '../utils/render.js';\n\nexport default class TableRowHeaderDetailedResults extends Component {\n  render() {\n    const partyList = this.props.partyList;\n    const showSummary = this.props.showSummary;\n    const showSeats = this.props.showSeats;\n    const firstRowHeader = this.props.firstRowHeader;\n    return [\n      <tr key={'header-row-1'}>\n        <th rowSpan={2}>{firstRowHeader}</th>\n        {partyList.map(\n          function(partyCode, i) {\n            return (\n              <td\n                key={partyCode}\n                className=\"td-header\"\n                colSpan={showSeats ? 2 : 1}\n              >\n                {renderParty(partyCode)}\n              </td>\n            );\n          }\n        )}\n        {showSummary ?  ([\n            'Electors',\n            'Polled (Turnout)',\n            'Valid',\n            'Rejected',\n        ].map(\n          function(summaryField, i) {\n            return (\n              <th\n                key={summaryField}\n                className=\"td-header\"\n                rowSpan={2}\n              >\n                  {summaryField}\n              </th>\n            );\n          },\n        )) : null}\n      </tr>,\n      <tr key={'header-row-2'}>\n        {partyList.map(\n          function(partyCode, i) {\n            const keyPrefix = partyCode;\n            return [\n              <th key={keyPrefix + '-votes'}>Votes</th>,\n              showSeats ? (<th key={keyPrefix + '-seats'}>Seats</th>) : null,\n            ];\n          }\n        )}\n      </tr>\n    ];\n  }\n}\n","import React, {Component} from 'react';\n\nimport {getRegionList, sort} from '../utils/data.js';\nimport {getPartyList} from '../utils/party.js';\nimport {renderLoading, renderRegion} from '../utils/render.js';\nimport {getEDCode} from '../utils/region.js';\n\nimport ChartMap from '../components/ChartMap.js';\nimport ChartPie from '../components/ChartPie.js';\nimport TableCandidateList from '../components/TableCandidateList.js';\nimport TableRowDetailedResults from '../components/TableRowDetailedResults.js';\nimport TableRowHeaderDetailedResults\n  from '../components/TableRowHeaderDetailedResults.js';\n\nexport default class TableDetailedResultsForED extends Component {\n  _isMounted = false;\n\n  constructor(props) {\n    super(props);\n    this.state = {regionList: undefined};\n  }\n  async componentDidMount() {\n    this._isMounted = true;\n    const edCode = getEDCode(this.props.edDRList);\n    const regionList = await getRegionList(edCode);\n    if (this._isMounted) {\n      this.setState({regionList: regionList});\n    }\n  }\n\n  commponentWillUnmount() {\n    this._isMounted = false;\n  }\n\n  render() {\n    const regionList = this.state.regionList;\n    if (!regionList) {\n      return renderLoading();\n    }\n    const resultList = sort(this.props.edDRList, 'pd_code');\n    const resultSummary = this.props.edLatestRS;\n    const candidateResultList = this.props.candidateResultList;\n    const edCode = getEDCode(resultList);\n    const partyList = getPartyList(resultSummary);\n\n    const headerRow = (\n      <TableRowHeaderDetailedResults\n        partyList={partyList}\n        showSummary={true}\n        showSeats={false}\n        firstRowHeader=\"Polling Division\"\n      />\n    );\n\n    const rowList = resultList.map(\n      function(result, i) {\n        return (\n          <TableRowDetailedResults\n            key={i}\n            result={result}\n            regionCodeField={'pd_code'}\n            partyList={partyList}\n          />\n        );\n      },\n    );\n\n    const footerRow = (\n      <TableRowDetailedResults\n        key='summary'\n        result={resultSummary}\n        regionCodeField={'pd_code'}\n        partyList={partyList}\n      />\n    );\n\n    const table = (\n      <table>\n        <thead>{headerRow}</thead>\n        <tbody>{rowList}</tbody>\n        <tfoot>{footerRow}</tfoot>\n      </table>\n    )\n\n    return (\n      <div id={edCode + '-details'}>\n        <h2>{renderRegion(edCode)}</h2>\n        <ChartMap\n          parentRegionCode={edCode}\n          childRegionCodeType={'pd_code'}\n          regionList={regionList}\n          resultList={resultList}\n        />\n        <ChartPie result={resultSummary} />\n        {table}\n        {(candidateResultList) ? (\n          <TableCandidateList\n            edCode={edCode}\n            candidateResultList={candidateResultList}\n          />\n        ): null}\n      </div>\n    );\n  }\n}\n","import React, {Component} from 'react';\nimport TableDetailedResultsForED\n  from '../components/TableDetailedResultsForED.js'\n\nexport default class TableDetailedResults extends Component {\n  render() {\n    const detailedResultList = this.props.detailedResultList;\n    const edRSL = this.props.edResultSummaryList;\n    const candidateResultList = this.props.candidateResultList;\n\n    const edToCRList = candidateResultList ? candidateResultList.reduce(\n      function(edToCRList, result) {\n        const edCode = result['ed_code'];\n        if (!edToCRList[edCode]) {\n          edToCRList[edCode] = [];\n        }\n        edToCRList[edCode].push(result);\n        return edToCRList;\n      },\n      {},\n    ) : {};\n\n    const edToDRList = detailedResultList.reduce(\n      function(edToDRList, result) {\n        const edCode = result['ed_code'];\n        if (!edToDRList[edCode]) {\n          edToDRList[edCode] = [];\n        }\n        edToDRList[edCode].push(result);\n        return edToDRList;\n      },\n      {},\n    )\n\n    const edToLatestRS = edRSL.reduce(\n      function(edToLatestRS, resultSummary) {\n        edToLatestRS[resultSummary['ed_code']] = resultSummary;\n        return edToLatestRS;\n      },\n      {},\n    );\n\n    return (\n      <div>\n        <h2>Results by Polling Division</h2>\n        {Object.keys(edToDRList).sort().map(\n          function(edCode, key) {\n            return (\n              <TableDetailedResultsForED\n                key={'TableDetailedResultsForED-' + key}\n                edCode={edCode}\n                edDRList={edToDRList[edCode]}\n                edLatestRS={edToLatestRS[edCode]}\n                candidateResultList={edToCRList[edCode]}\n              />\n            );\n          },\n        )}\n      </div>\n    );\n  }\n}\n","import React, {Component} from 'react';\n\nimport {getRegionListLK, sort} from '../utils/data.js';\nimport {getPartyList} from '../utils/party.js';\nimport {renderLoading} from '../utils/render.js';\nimport {formatPercent} from '../utils/data.js';\n\nimport ChartMap from '../components/ChartMap.js';\nimport TableRowDetailedResults from '../components/TableRowDetailedResults.js';\nimport TableRowHeaderDetailedResults\n  from '../components/TableRowHeaderDetailedResults.js';\n\nexport default class TableEDSummary extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {regionList: undefined};\n  }\n\n  async componentDidMount() {\n    const regionList = await getRegionListLK();\n    this.setState({regionList: regionList});\n  }\n\n  render() {\n    const regionList = this.state.regionList;\n    if (!regionList) {\n      return renderLoading();\n    }\n    const edVoteSummary = this.props.edVoteSummary;\n    const edSeatSummary = this.props.edSeatSummary;\n\n    let lkSeatSummaryIncrLast = this.props.lkSeatSummaryIncrLast;\n    if (!lkSeatSummaryIncrLast) {\n      return null;\n    }\n\n    const partyToVoteCount = edVoteSummary.reduce(\n      function(partyToVoteCount, resultVote, i) {\n        return resultVote['by_party'].reduce(\n          function(partyToVoteCount, forParty, j) {\n            const party = forParty['party_code'];\n\n            let voteCount = forParty['vote_count'];\n            if (isNaN(voteCount)) {\n              voteCount = 0;\n            }\n\n            if (partyToVoteCount[party] === undefined) {\n              partyToVoteCount[party] = 0;\n            }\n            partyToVoteCount[party] += voteCount;\n            return partyToVoteCount;\n          },\n          partyToVoteCount\n        );\n      },\n      {},\n    );\n    const totalVotes = Object.values(partyToVoteCount).reduce(\n      function(totalVotes, voteCount, i) {\n        return totalVotes + voteCount;\n      },\n      0,\n    );\n\n    lkSeatSummaryIncrLast['by_party'] = lkSeatSummaryIncrLast['by_party'].map(\n      function(forParty, i) {\n        const party = forParty['party_code'];\n        const voteCount = partyToVoteCount[party];\n        forParty['vote_count'] = voteCount;\n        forParty['vote_percentage'] = formatPercent(voteCount, totalVotes);\n        return forParty;\n      },\n    );\n\n    const partyList = getPartyList(lkSeatSummaryIncrLast);\n\n    const edVoteSummaryByEdCode = edVoteSummary.reduce(\n      function(edVoteSummaryByEdCode, resultVote, i) {\n        const edCode = resultVote['ed_code'];\n        edVoteSummaryByEdCode[edCode] = resultVote;\n        return edVoteSummaryByEdCode;\n      },\n      {},\n    );\n\n    const headerRow = (\n      <TableRowHeaderDetailedResults\n        partyList={partyList}\n        showSummary={false}\n        showSeats={true}\n        firstRowHeader=\"Electoral District\"\n      />\n    );\n\n    const rowList = sort(edSeatSummary, 'ed_code').map(\n      function(result, i) {\n        const resultVote = edVoteSummaryByEdCode[result['ed_code']];\n        const resultVoteByParty = resultVote['by_party'].reduce(\n          function(resultVoteByParty, forParty, j) {\n            const party = forParty['party_code'];\n            resultVoteByParty[party] = forParty;\n            return resultVoteByParty;\n          },\n          {},\n        )\n        result['by_party'] = result['by_party'].map(\n          function(forParty, j) {\n            const party = forParty['party_code'];\n            forParty['vote_count'] = resultVoteByParty[party]['vote_count'];\n            forParty['vote_percentage'] =\n              resultVoteByParty[party]['vote_percentage'];\n            return forParty;\n          }\n        )\n\n        return (\n          <TableRowDetailedResults\n            key={i}\n            result={result}\n            partyList={partyList}\n            regionCodeField={'ed_code'}\n          />\n        );\n      }\n    )\n\n    const footerRow = (\n      <TableRowDetailedResults\n        result={lkSeatSummaryIncrLast}\n        partyList={partyList}\n        regionCodeField={null}\n      />\n    )\n\n    const table = (\n      <table>\n        <thead>{headerRow}</thead>\n        <tbody>{rowList}</tbody>\n        <tfoot>{footerRow}</tfoot>\n      </table>\n    )\n\n    return (\n      <div>\n        <h1>Summary Results by Electoral District</h1>\n        <ChartMap\n          parentRegionCode={'LK'}\n          childRegionCodeType={'ed_code'}\n          regionList={regionList}\n          resultList={edVoteSummary}\n        />\n        {table}\n        <p>* Complete Electoral Districts Only</p>\n      </div>\n    );\n  }\n}\n","import React, {Component} from 'react';\n\nimport {getPartyColor} from '../utils/party.js';\n\nconst BOX_DIM = 12;\nconst BOXES_PER_COLUMN = 10;\n\nexport default class ChartSeats extends Component {\n  render() {\n    const result = this.props.result;\n    let x = 0;\n    let y = 0;\n    let cumSeatCount = 0;\n\n    const renderedBoxList = result['by_party'].map(\n      function(forParty, i) {\n        const partyCode = forParty['party_code'];\n        const color = getPartyColor(partyCode, true, '100.00%');\n        const seatCount = forParty['seat_count']\n          + forParty['national_list_seat_count'];\n\n        if (seatCount === 0) {\n          return [];\n        }\n\n        return (Array.from(Array(seatCount).keys())).map(\n          function(i) {\n            const renderedBox = (\n              <circle\n                key={partyCode + i}\n                cx={x + BOX_DIM * 0.5}\n                cy={y + BOX_DIM * 2}\n                r={0.8 * BOX_DIM * 0.4}\n                fill={color}\n                stroke='gray'\n              />\n            );\n            cumSeatCount += 1;\n            y += BOX_DIM;\n            if (y >= BOX_DIM * BOXES_PER_COLUMN) {\n              x += BOX_DIM;\n              y = 0;\n            }\n\n            if (cumSeatCount === 113) {\n              x += BOX_DIM * 1.5;\n            }\n\n            if (cumSeatCount === 150) {\n              x += BOX_DIM * 0.5;\n            }\n\n            if (cumSeatCount % 50 === 0) {\n              x += BOX_DIM * 0.2;\n            }\n\n            if (cumSeatCount % 10 === 5) {\n              y += BOX_DIM * 0.5;\n            }\n\n            return renderedBox;\n          },\n        )\n      }\n    );\n\n    const width = BOX_DIM * (225 / BOXES_PER_COLUMN + 4) ;\n    const height = BOX_DIM * (BOXES_PER_COLUMN + 3);\n    const x12 = BOX_DIM * 12.6;\n    const x23 = BOX_DIM * 17.3;\n    return (\n      <svg width={width} height={height} key={'ChartSeats'}>\n        {renderedBoxList}\n        <line\n          x1={x12}\n          x2={x12}\n          y1={BOX_DIM * 1.5}\n          y2={height}\n          stroke={'gray'}\n          strokeDasharray={'2,2'}\n        />\n        <text\n          x={x12}\n          y={BOX_DIM * 1.2}\n          fill={'gray'}\n          textAnchor={'middle'}\n          fontSize={BOX_DIM * 0.6}\n        >\n          Majority\n        </text>\n        <line\n          x1={x23}\n          x2={x23}\n          y1={BOX_DIM * 1.5}\n          y2={height}\n          stroke={'black'}\n          strokeDasharray={'2,2'}\n        />\n        <text\n          x={x23}\n          y={BOX_DIM * 1.2}\n          fill={'black'}\n          textAnchor={'middle'}\n          fontSize={BOX_DIM * 0.6}\n        >\n          Two-Thirds\n        </text>\n      </svg>\n    )\n  }\n}\n","import React, {Component} from 'react';\n\nimport {getPartyColor, getPartyList} from '../utils/party.js';\nimport {renderParty} from '../utils/render.js';\n\nimport ChartSeats from '../components/ChartSeats.js';\n\nexport default class TableFinalSeats extends Component {\n  render() {\n    let finalSeats = this.props.finalSeats;\n    if (!finalSeats) {\n      return null;\n    }\n    const partyList = getPartyList(finalSeats);\n\n    const bySeatType = finalSeats['by_party'].reduce(\n      function(bySeatType, x) {\n        const partyCode = x['party_code'];\n        bySeatType['Electoral District Seats'][partyCode] = x['seat_count'];\n        bySeatType['National List Seats'][partyCode] =\n          x['national_list_seat_count'];\n        bySeatType['Total Seats'][partyCode] =\n          x['seat_count'] + x['national_list_seat_count'];\n        return bySeatType;\n      },\n      {\n        'Electoral District Seats': {},\n        'National List Seats': {},\n        'Total Seats': {},\n      },\n    );\n\n    const headerRow = (\n      <tr>\n        <th></th>\n        {\n          partyList.map(\n            function(partyCode) {\n              return (\n                <td key={partyCode} className=\"td-header\">\n                  {renderParty(partyCode)}\n                </td>\n              );\n            },\n          )\n        }\n      </tr>\n    );\n\n    const rowList = Object.keys(bySeatType).map(\n      function(seatType, i) {\n        const className = (seatType === 'Total Seats') ? 'tr-total' : '';\n        return (\n          <tr key={seatType} className={className}>\n            <td>{seatType}</td>\n            {\n              partyList.map(\n                function(partyCode) {\n                  const seatCount = bySeatType[seatType][partyCode];\n                  const className = (seatCount === 0) ? 'div-percent-zero' : '';\n\n                  let style = {}\n                  if (seatType === 'Total Seats') {\n                    style = {\n                        backgroundColor: getPartyColor(partyCode, true, \"50.0%\"),\n                    };\n                  }\n\n\n                  return (\n                      <td\n                        key={partyCode}\n                        className={'td-seats ' + className}\n                        style={style}\n                      >\n                        {seatCount}\n                      </td>\n                  );\n                },\n              )\n            }\n          </tr>\n        );\n      }\n    )\n\n    const table = (\n      <table>\n        <thead>{headerRow}</thead>\n        <tbody>{rowList}</tbody>\n      </table>\n    )\n\n    return (\n      <div>\n        <h1>Final Islandwide Results</h1>\n        <ChartSeats result={finalSeats} />\n        {table}\n      </div>\n    );\n  }\n}\n","import React, {Component} from 'react';\n\nimport {getPartyColor} from '../utils/party.js';\nimport {renderDescription} from '../utils/render.js';\n\nconst MAX_LATEST_RESULTS = 5;\n\nconst FORMAT_TIME_OPTIONS = {\n    year: 'numeric',\n    month: 'long',\n    day: 'numeric'\n};\nfunction formatT(t) {\n  // Case 1: t is unixtime\n  const ts = new Date(t * 1000).toLocaleTimeString(\n    'en-LK',\n    FORMAT_TIME_OPTIONS,\n  );\n  if (ts !== 'Invalid Date') {\n    return ts;\n  }\n  // Case 2: t is time string\n  const t2 = Date.parse(t) / 1000.0;\n  return formatT(t2);\n}\n\nexport default class TableLatestResults extends Component {\n  render() {\n    const detailedResultList = this.props.detailedResultList;\n    const displayResultList = detailedResultList.reverse().slice(\n      0,\n      MAX_LATEST_RESULTS,\n    );\n\n    return (\n      <div>\n        <h1>Latest Results</h1>\n        <p>Click for details.</p>\n        <div>\n          {displayResultList.map(\n            function(result, i) {\n              const pdCode = result['pd_code'];\n              const pdName = result['pd_name'];\n              const edName = result['ed_name'];\n              const resultTime = result['timestamp'];\n              const href = '#' + pdCode;\n              const winPartyCode = result['by_party'][0]['party_code'];\n              const winPartyPStr = result['by_party'][0]['vote_percentage'];\n\n              const renderedDescription = renderDescription(result);\n\n              const backgroundColor = getPartyColor(\n                  winPartyCode,\n                  true,\n                  winPartyPStr,\n              );\n              const style = {\n                backgroundColor: backgroundColor,\n              };\n              return (\n                <div\n                  key={`LatestResults-${pdCode}`}\n                  className=\"div-latest-results-item\"\n                  style={style}\n                >\n                  <div className=\"div-latest-results-item-time\">\n                    {formatT(resultTime)}\n                  </div>\n                  <div className=\"div-latest-results-item-body\">\n                    <a href={href}>\n                      {`${pdName} (${edName} Electoral District)`}\n                    </a>\n                  </div>\n                  {renderedDescription}\n                </div>\n              );\n            },\n          )}\n        </div>\n      </div>\n    )\n\n  }\n}\n","import React, {Component} from 'react';\n\nimport GEN_ELEC_YEAR_LIST from '../constants/GEN_ELEC_YEAR_LIST.js';\n\nexport default class YearSelector extends Component {\n  render() {\n    return GEN_ELEC_YEAR_LIST.map(\n      function(year) {\n        const onClick = function() {\n          this.props.onChangeYear(year);\n        }.bind(this);\n\n        const className = (this.props.selectedYear === year)\n          ? ' a-select-year-selected'\n          : '';\n\n        return (\n          <a\n            key={`Year-${year}`}\n            href=\"#App\"\n            onClick={onClick}\n            className={'a-select-year' + className}>\n            {year}\n          </a>\n        );\n      }.bind(this),\n    );\n  }\n}\n","import React, {Component} from 'react';\n\nimport GEN_ELEC_YEAR_LIST from '../constants/GEN_ELEC_YEAR_LIST.js';\nimport RESULT_TYPE from '../constants/RESULT_TYPE.js';\n\nimport {downloadResults, getResultGroups} from '../utils/data.js';\nimport {renderLoading} from '../utils/render.js';\n\nimport TableDetailedResults from '../components/TableDetailedResults.js';\nimport TableEDSummary from '../components/TableEDSummary.js';\nimport TableFinalSeats from '../components/TableFinalSeats.js';\nimport TableLatestResults from '../components/TableLatestResults.js';\nimport YearSelector from '../components/YearSelector.js';\nimport Logo from \"../public/img/Emplem of SriLanka.png\";\n\nconst DEFAULT_YEAR = GEN_ELEC_YEAR_LIST.slice(-1)[0];\n\nexport default class HomePage extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n        resultGroups: null,\n        year: DEFAULT_YEAR,\n    }\n  }\n\n  async componentDidMount() {\n    await this.updateYear(this.state.year);\n  }\n\n  async updateYear(year) {\n    this.setState({resultGroups: null})\n    const resultGroups = await getResultGroups(year);\n    this.setState({\n      resultGroups: resultGroups,\n      year: year,\n    })\n  }\n\n  render() {\n    const resultGroups = this.state.resultGroups;\n    if (!resultGroups) {\n      return renderLoading();\n    }\n    const year = this.state.year;\n    const detailedResultList = resultGroups[RESULT_TYPE.RP_V];\n    const edResultSummaryList = resultGroups[RESULT_TYPE.RE_VI];\n\n    const edSeatSummary = resultGroups[RESULT_TYPE.RE_S];\n    const edVoteSummary = resultGroups[RESULT_TYPE.RE_V];\n    const lkSeatSummaryIncr = resultGroups[RESULT_TYPE.RN_SI];\n    const lkSeatSummaryIncrLast = (lkSeatSummaryIncr)\n      ? lkSeatSummaryIncr.slice(-1)[0]\n      : null;\n    const candidateResultList = resultGroups[RESULT_TYPE.RE_SC];\n\n    const finalSeatsGroup = resultGroups[RESULT_TYPE.RN_VSN];\n    const finalSeats = (finalSeatsGroup) ? finalSeatsGroup[0] : null;\n\n    const onChangeYear = async function(year) {\n      await this.updateYear(year);\n    }.bind(this);\n\n    const onDownloadResults = async function() {\n      await downloadResults(year);\n    }\n\n    return (\n      <div id=\"HomePage\" key=\"HomePage\">\n        <div id=\"home-page-header\">\n        <aside className=\"header-img\" style={{marginTop: 10,marginBottom:10}}>\n            <img src={Logo} alt=\"\" />\n          </aside>\n          <YearSelector onChangeYear={onChangeYear} selectedYear={year}/>\n          <h1>{`${year} Sri Lankan Parliamentary Elections`}</h1>\n          <p className=\"p-download\" onClick={onDownloadResults}>\n            Download Results as JSON\n          </p>\n        </div>\n        <div id=\"home-page-body\">\n          <TableLatestResults detailedResultList={detailedResultList} />\n          <TableFinalSeats finalSeats={finalSeats} />\n          <TableEDSummary\n            edVoteSummary={edVoteSummary}\n            edSeatSummary={edSeatSummary}\n            lkSeatSummaryIncrLast={lkSeatSummaryIncrLast}\n          />\n          <TableDetailedResults\n            detailedResultList={detailedResultList}\n            edResultSummaryList={edResultSummaryList}\n            candidateResultList={candidateResultList}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n","import React, {Component} from 'react';\nimport './App.css';\nimport ReactGA from 'react-ga';\nimport HomePage from './elections/components/HomePage.js';\n\nexport default class App extends Component {\n\n  componentDidMount(){\n    ReactGA.initialize('UA-152857980-2');\n    ReactGA.pageview(window.location.pathname + window.location.search);\n  }\n    render() {\n    return (\n      <div className=\"App\" key=\"App\">\n        <HomePage />\n      </div>\n    );\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}